name: "CI CD workflows"

on:
  push:
    branches:
      - "main"
    paths:
      - '.github/workflows/CI_CD.yml'
      - 'src/IdentityServer/**'
  pull_request:
    types:
      - opened
      - ready_for_review
      - synchronize
      - reopened
    branches:
      - "main"
    paths:
      - '.github/workflows/CI_CD.yml'
      - 'src/IdentityServer/**'
  workflow_dispatch:   
    inputs:
      isCD:
        description: "Run CD:"
        required: true
        default: 'no'
        type: choice
        options:
          - 'no'
          - 'publish'
          - 'stage'
          - 'production'
 
env:
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 6.0.x
  SOLUTION_FILE: FinalProject.sln

jobs:
  dotnet_CI:
    name: .Net CI
    if: github.event_name != 'pull_request' || (github.event.pull_request.draft == false)
    strategy:
      fail-fast: false
      matrix:
        solution: 
        - IdentityServer:
          name: IdentityServer
          path: src/IdentityServer/FinalProject.IdentityServer.slnf
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore
      run: |
        dotnet tool restore
        dotnet restore ${{ matrix.solution.path }}

    - name: Build
      run: dotnet build "${{ matrix.solution.path }}" --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test "${{ matrix.solution.path }}" --configuration ${{ env.CONFIGURATION }} --no-build --verbosity normal --collect "XPlat Code Coverage"
    
    - name: Upload Test Results Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.solution.name }}.TestResults
        path: |
          **/TestResults/**

    - name: Upload TestResults to CodeCov
      uses: codecov/codecov-action@v3  
  
  dotnet_publish:
    name: Generate and upload publish artifacts of .NET projects.
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.isCD != 'no')
    runs-on: ubuntu-latest
    needs: dotnet_CI
    strategy:
      fail-fast: false
      matrix:
        packages: 
        - IdentityServer:
          name: IdentityServer
          path: src/IdentityServer/src/UI
        
    steps:    
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
       
    - name: Restore and Build
      run: |
        dotnet tool restore
        dotnet restore "${{ matrix.packages.path }}"
        dotnet build "${{ matrix.packages.path }}" --configuration ${{ env.CONFIGURATION }} --no-restore    

    - name: Publish
      run: |
        dotnet publish "${{ matrix.packages.path }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ matrix.packages.path }}/publish"
    
    - name: Generate migrations efbundle
      continue-on-error: true
      run: |
        dotnet ef migrations bundle --configuration ${{ env.CONFIGURATION }} --no-build --context ApplicationDbContext --project "${{ matrix.packages.path }}" --output "${{ matrix.packages.path }}/publish/efbundle" -r linux-x64
        dotnet ef migrations bundle --configuration ${{ env.CONFIGURATION }} --no-build --context ApplicationDbContext --project "${{ matrix.packages.path }}" --output "${{ matrix.packages.path }}/publish/efbundle.exe" -r win-x64

    - name: Upload Publish Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.packages.name }}
        path: ${{ matrix.packages.path }}/publish
  
  deploy_identityserver_on_stage:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.isCD == 'stage') 
    runs-on: ubuntu-latest
    needs: dotnet_publish
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    env:
      AZURE_WEBAPP_NAME: FinalProjectIdentityServer
      AZURE_WEBAPP_PACKAGE_PATH: src/IdentityServer/src/UI/publish
      AZURE_WEBAPP_PUBLISH_PROFILE: ${{ secrets.IdentityServer_Development_FFF }}
      AZURE_WEBAPP_PROJECT_PATH: src/IdentityServer/src/UI
      
    steps:    
    - name: Download Publish Artifacts
      uses: actions/download-artifact@v2
      with:
        name: IdentityServer
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Azure WebApp
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }} 